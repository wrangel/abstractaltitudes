# Stage 1: Build stage using node:slim
FROM node:slim AS build

# Set working directory
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install dependencies (including dev dependencies)
RUN pnpm install

# Copy rest of the application code
COPY . .

# (Optional) Build step if needed
# RUN pnpm run build

# Stage 2: Production runtime stage using node:alpine
FROM node:alpine

# Set working directory for runtime
WORKDIR /app

# Install pnpm globally (needed to run with pnpm)
RUN npm install -g pnpm

# Copy production dependencies from build stage
COPY --from=build /app/node_modules ./node_modules

# Copy application source code from build stage
COPY --from=build /app/src ./src
COPY --from=build /app/package*.json ./ 

# Expose port your app runs on
EXPOSE 8081

# Run the application
CMD ["node", "src/backend/server.mjs"]
