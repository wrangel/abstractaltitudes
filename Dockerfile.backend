# Stage 1: Build stage using node:slim
FROM node:slim AS build

WORKDIR /app

# Install pnpm globally as root (default user in node images is root)
RUN npm install -g pnpm

# Copy package files first
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install

# Copy rest of source
COPY . .

# (Optional) Build step here if any
# RUN pnpm run build

# Stage 2: Production runtime stage using node:alpine
FROM node:alpine

# Create non-root user for security (optional)
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app

# Install pnpm globally as root (before switching user)
RUN npm install -g pnpm

# Switch to non-root user
USER appuser

# Copy dependencies and source from build stage
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/src ./src
COPY --from=build /app/package*.json ./

EXPOSE 8081

CMD ["node", "src/backend/server.mjs"]
