# syntax=docker/dockerfile:1.4

FROM node:slim AS build

WORKDIR /app

RUN npm install -g pnpm

# Copy only package files for cached install
COPY package*.json pnpm-lock.yaml ./

# Use BuildKit cache mount to speed up pnpm install
RUN --mount=type=cache,target=/root/.pnpm-store \
    pnpm install --frozen-lockfile

# Copy source code last
COPY . .

# (Optional) Build or transpile steps can go here if needed
# RUN pnpm run build

FROM node:alpine AS runtime

RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app

RUN npm install -g pnpm

USER appuser

# Copy only production dependencies and source
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/src ./src
COPY --from=build /app/package*.json ./

EXPOSE 8081

CMD ["node", "src/backend/server.mjs"]
